name: Extended Linux Commands Example

on:
  push:
    branches:
      - main

jobs:
  run-linux-commands:
    runs-on: ubuntu-latest  # Use Ubuntu as the runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Project Directory
        run: |
          mkdir -p my_project
          cd my_project
          mkdir src tests
          touch src/app.js tests/test_app.js

      - name: Write Example Code
        run: |
          echo "console.log('Hello from app.js');" > my_project/src/app.js
          echo "console.log('Testing app...');" > my_project/tests/test_app.js

      - name: Install Dependencies
        run: |
          echo "Installing dependencies..."
          touch my_project/package.json
          echo "{}" > my_project/package.json # Creates a dummy package.json
          cd my_project
          # Simulate npm installation
          echo "Installing packages..." # Normally you would run `npm install` here

      - name: Run Tests
        run: |
          cd my_project/tests
          # Simulate running tests
          if [ -f test_app.js ]; then
            cat test_app.js
          else
            echo "No test file found!"
          fi

      - name: Check File and Directory Permissions
        run: |
          echo "Checking permissions for my_project:"
          ls -ld my_project
          echo "Checking permissions for src and tests folders:"
          ls -ld my_project/src
          ls -ld my_project/tests

      - name: Clean Up
        run: |
          echo "Cleaning up..."
          rm -rf my_project
          echo "Cleanup complete."
